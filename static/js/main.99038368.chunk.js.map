{"version":3,"sources":["components/FortAwesomeIcons/index.js","components/Button.jsx","components/Socials.jsx","pages/Home.js","pages/Projects.js","App.js","serviceWorker.js","index.js"],"names":["library","add","fab","faFacebook","faGithub","faLinkedin","faCheckSquare","faCoffee","Button","props","className","children","Socials","target","rel","href","icon","Home","to","Projects","App","Helmet","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4WAQAA,IAAQC,IAAIC,IAAKC,IAAYC,IAAUC,IAAYC,IAAeC,K,YCNrDC,G,MAAS,SAACC,GAAD,OACpB,4BAAQC,UAAW,OAAQD,EAAME,Y,gBCCtBC,EAAU,kBACrB,yBAAKF,UAAU,WACb,uBACEG,OAAO,SACPC,IAAI,sBACJC,KAAM,6BAEN,kBAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,aAEjC,uBACEH,OAAO,SACPC,IAAI,sBACJC,KAAM,kCAEN,kBAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,gBCVtB,SAASC,IACtB,OACE,yBAAKP,UAAU,QACb,yBAAKA,UAAU,WACb,4DACA,6IAIA,kBAAC,IAAD,CAAMQ,GAAG,aACP,kBAAC,EAAD,uBAEF,kBAAC,EAAD,OAEF,yBAAKR,UAAU,UACb,2G,MCpBO,SAASS,IACtB,OACE,6BACE,4C,mBCgBSC,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKV,UAAU,OACb,kBAACW,EAAA,EAAD,KACE,+BAAQ,wCAEV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,UAAWP,IAC1C,kBAAC,IAAD,CAAOK,KAAK,YAAYE,UAAWL,QCHzBM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.99038368.chunk.js","sourcesContent":["import { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faCheckSquare, faCoffee } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faGithub,\r\n  faLinkedin,\r\n  faFacebook,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nlibrary.add(fab, faFacebook, faGithub, faLinkedin, faCheckSquare, faCoffee);\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\nexport const Button = (props) => (\r\n  <button className={\"btn\"}>{props.children}</button>\r\n);\r\n","import React from \"react\";\r\n\r\nimport \"./Socials.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nexport const Socials = () => (\r\n  <div className=\"socials\">\r\n    <a\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      href={\"https://github.com/rinZee\"}\r\n    >\r\n      <FontAwesomeIcon icon={[\"fab\", \"github\"]} />\r\n    </a>\r\n    <a\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      href={\"https://codepen.io/renjisherpa\"}\r\n    >\r\n      <FontAwesomeIcon icon={[\"fab\", \"codepen\"]} />\r\n    </a>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport \"../components/FortAwesomeIcons\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"../components/Button\";\r\nimport { Socials } from \"../components/Socials\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"content\">\r\n        <h1>Hi, it’s Tsheten Sherpa</h1>\r\n        <p>\r\n          I’m a self-taught web developer based in Kathmandu, Nepal with passion\r\n          for learning new web technologies.\r\n        </p>\r\n        <Link to=\"/projects\">\r\n          <Button>View Projects</Button>\r\n        </Link>\r\n        <Socials></Socials>\r\n      </div>\r\n      <div className=\"footer\">\r\n        <p>\r\n          Lorem, ipsum dolor sit amet consectetur adipisicing elit. Distinctio,\r\n          qui!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Projects.css\";\r\n\r\nexport default function Projects() {\r\n  return (\r\n    <div>\r\n      <h1>My Projects</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\nimport Projects from \"./pages/Projects\";\nimport { Helmet } from \"react-helmet\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Helmet>\n          <style>{\"body { background-color: #22262a; }\"}</style>\n        </Helmet>\n        <Switch>\n          <Route path=\"/Portfolio\" exact component={Home} />\n          <Route path=\"/projects\" component={Projects} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}